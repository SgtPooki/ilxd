;; This is a password based unlocking script. The poseidon hash of a private
;; value is committed to as the 'locking-params', and the private value is
;; provided as the 'unlocking-params'. If the hash of the private value equals
;; hash committed to the in the 'locking-params' the function will return true
;; and allow the coins to be spent. Otherwise validation will fail.
;;
;; Note that a password script like this is technically possible to build on
;; bitcoin and bitcoin-like coins but they are insecure because to unlock the
;; coins you must reveal the hash preimage publicly. This would allow miners to
;; scrape the private value from the transaction and front-run the spender
;; and steal the coins.
;;
;; Since unlocking functions are validated inside the circuit, the private values
;; are never revealed publicly making simple scripts like this secure.
(lambda (locking-params unlocking-params input-index private-params public-params)
    (= (commit (car unlocking-params)) (car locking-params))
)
