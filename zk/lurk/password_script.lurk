;; This is a password based unlocking script. The poseidon hash of a private
;; value is committed to as the 'script-params', and the private value is
;; provided as the 'unlocking-params'. If the hash of the private value equals
;; hash committed to the in the 'script-params' the function will return true
;; and allow the coins to be spent. Otherwise validation will fail.
;;
;; Note that a password script like this is technically possible to build on
;; bitcoin and bitcoin-like coins but they are insecure because to unlock the
;; coins you must reveal the hash preimage publicly. This would allow miners to
;; scrape the private value from the transaction and front-run the spender
;; and steal the coins.
;;
;; Since unlocking functions are validated inside the circuit, the private value
;; are never revealed publicly making simple scripts like this secure.
(lambda (script-params unlocking-params input-index private-params public-params)
    (= (commit (car unlocking-params)) (car script-params))
)

 (sum-xputs (lambda (xputs illium-sum asset-map)
                              (letrec (
                                    (amount (cdr (car xputs)))
                                    (asset-id (cdr amount))
                                    (sum-assets (lambda (asset-map a-id amt)
                                                (let ((asset (map-get a-id asset-map)))

                                                      (if (check-overflow (cdr asset) amt)
                                                            nil
                                                            (if (eq asset nil)
                                                                (cons asset-map (cons a-id amt))
                                                                (list-update (lambda (entry)
                                                                    (if (= (car entry) a-id)
                                                                   (cons a-id (+ (cdr entry) amt))
                                                                    entry)) asset-map)))))))